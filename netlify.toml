# Netlify configuration file

# Build settings
[build]
  # Directory to publish (the build output)
  publish = "build"
  
  # Default build command
  command = "npm run build"

# Redirects and rewrite rules
[[redirects]]
  # Redirect all routes to index.html for client-side routing with React Router
  from = "/*"
  to = "/index.html"
  status = 200

# Headers for caching and performance optimization
[[headers]]
  # Define headers for all files
  for = "/*"
    [headers.values]
    # Enable security headers
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    
[[headers]]
  # Cache static assets with a long cache lifetime
  for = "/static/*"
    [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  # Cache images, fonts, etc.
  for = "*.svg"
    [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.jpg"
    [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.png"
    [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.woff"
    [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.woff2"
    [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# Environment variables settings
[context.production.environment]
  REACT_APP_ENV = "production"

[context.deploy-preview.environment]
  REACT_APP_ENV = "preview"

# Build plugins
[[plugins]]
  package = "@netlify/plugin-lighthouse"
  
  [plugins.inputs]
    output_path = "lighthouse-results"
    thresholds = { performance = 0.7, accessibility = 0.9, best-practices = 0.8, seo = 0.8 }

# Post processing - Optimize assets automatically
[build.processing]
  skip_processing = false
[build.processing.css]
  bundle = true
  minify = true
[build.processing.js]
  bundle = true
  minify = true
[build.processing.html]
  pretty_urls = true
[build.processing.images]
  compress = true 